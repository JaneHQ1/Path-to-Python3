import re

a = 'python 1111java678php'
r = re.findall('[a-z]{3,6}', a)
print(r)

# 在上一节的例子里，匹配到3个以后已经可以完成匹配。
# 为什么匹配到3个就已经完成了匹配？
# 为什么正则表达式在匹配到3个以后任然会继续匹配？
# 这个涉及到正则表达式数量词的一个非常重要的概念。
# 原因：在正则表达实式里的数量词分贪婪和非贪婪。
# 默认情况下，Python倾向于贪婪的匹配方式
# 贪婪的匹配方式：如果把数量词限定在一个区间之内，Python趋向于尽可能多的取最大一个区间的值，一直到字符不满足条件为止。
# 比如说这个例子，到空格时才停止匹配，两个原因：1.空格不在[a-z]中 2. 空格式是第7位，不在数量词范围内。

# 怎样表示非贪婪？
r = re.findall('[a-z]{3,6}?', a)
print(r)
# 输出结果：['pyt', 'hon', 'jav', 'php']
# 注意：结果[a-z]{3}是一样的，但概念是不一样的。Why?


# 贪婪和非贪婪是经常产生bug的因素。如果结果字符串超出预期，可以检查一下是否是贪婪模式。

