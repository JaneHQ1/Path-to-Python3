概括字符集就是一种字符集，概括字符集是七月老师自己概括出的定义。

1. 概括字符集定义
e.g. '\d', '\D'
'\d'可以用字符集[0-9]表示。
import re
a = 'python1111java678php'
# '\d' 就是一个概括字符集，它把数字1到9都概括到了
r = re.findall('[0-9]]', a)
print(r)
输出结果：
['1', '1', '1', '1', '6', '7', '8']

2. 有没有概括字符集可以即匹配数字，又匹配字母？

# '\w' 匹配单词字符集
a = 'python1111java678php'
r = re.findall('\w', a)
print(r)
输出结果
['p', 'y', 't', 'h', 'o', 'n', '1', '1', '1', '1', 'j', 'a', 'v', 'a', '6', '7', '8', 'p', 'h', 'p']

这样的匹配有什么意义？
a = 'python1111java&678php'
r = re.findall('\w', a)
# '\w' 匹配不了&符号
# '\w' 相当于'[A-Za-z0-9_]'，注意可以匹配下划线。

4. 非单词字符包括空格，&，回车'\n'
# '\W' 匹配非单词符号
a = 'python 1111java&678p\nhp'
r = re.findall('\W', a)
print(r)
输出结果：
[' ', '&', '\n']

3. 为什么Python把正则表达式的字母单个拆分？
字符集只能匹配单一的字母和字符。

4. 有没有概括字符集代表之前不能匹配的字符？
# '\s' 匹配空白字符集
a = 'python 11\t11java&678p\nh\rp'
r = re.findall('\s', a)
print(r)
输出结果：
[' ', '\t', '\n', '\r']
# 注意：&不能匹配，因为&和它们不是同种字符。
# ' ', '\t', '\n', '\r' 成为空白字符

5. 常用概括字符集有三种
\d \D
单词字符集：\w \W 
单词字符集范围：[A-Za-z0-9_]
空白字符集：\s \S
空白字符集例子：[' ', '\t', '\n', '\r']
注意'&'不属于单词字符集和空白字符集。

